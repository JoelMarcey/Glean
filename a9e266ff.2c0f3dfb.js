(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{109:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(7),c=(n(0),n(128)),i=n(39),o=["components"],l={id:"basic",title:"Basic Concepts",sidebar_label:"Basic Concepts"},p={unversionedId:"schema/basic",id:"schema/basic",isDocsHomePage:!1,title:"Basic Concepts",description:"This section explains the concepts behind how Glean stores data, and",source:"@site/../docs/schema/basic.md",slug:"/schema/basic",permalink:"/docs/schema/basic",editUrl:"https://www.internalfb.com/intern/diffusion/FBS/browse/master/fbcode/glean/website/../docs/schema/basic.md",version:"current",sidebar_label:"Basic Concepts",sidebar:"someSidebar",previous:{title:"Walkthrough",permalink:"/docs/walkthrough"},next:{title:"Built-in Types",permalink:"/docs/schema/types"}},b=[],s={toc:b};function u(e){var t=e.components,n=Object(r.a)(e,o);return Object(c.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"This section explains the concepts behind how Glean stores data, and\nhow to define a schema to describe your data."),Object(c.b)(i.FbInternalOnly,{mdxType:"FbInternalOnly"},Object(c.b)("p",null,"For a more formal description, see ",Object(c.b)("a",{parentName:"p",href:"https://fb.workplace.com/notes/roman-leshchinskiy/glean-a-little-formally/504151247034061/"},"Glean, a little formally"),".")),Object(c.b)("p",null,"A Glean Database consists of a set of ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"Facts")),". Facts are unique;\neach fact is stored only once."),Object(c.b)("p",null,"The ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"Schema"))," describing the database is a set of\n",Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"Predicates")),". You can think of the predicates as the types of the\nfacts. Each fact is an instance of one predicate."),Object(c.b)("p",null,"A predicate looks like this:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre"},"predicate P : KeyType -> ValueType\n")),Object(c.b)("p",null,"where"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"P")," is the name of the predicate. e.g. ",Object(c.b)("inlineCode",{parentName:"li"},"src.File")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"KeyType")," is the ",Object(c.b)("em",{parentName:"li"},"key type")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"ValueType")," is the ",Object(c.b)("em",{parentName:"li"},"value type"))),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"KeyType")," and ",Object(c.b)("inlineCode",{parentName:"p"},"ValueType")," are types; the type language is described in\n",Object(c.b)("a",{parentName:"p",href:"/docs/schema/types"},"Built-in Types"),"."),Object(c.b)("p",null,"Every ",Object(c.b)("em",{parentName:"p"},"fact")," in predicate P has:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"A ",Object(c.b)("strong",{parentName:"li"},Object(c.b)("em",{parentName:"strong"},"Fact ID")),": a unique 64-bit integer that identifies the fact"),Object(c.b)("li",{parentName:"ul"},"A ",Object(c.b)("strong",{parentName:"li"},Object(c.b)("em",{parentName:"strong"},"Key")),", a term of type ",Object(c.b)("inlineCode",{parentName:"li"},"KeyType")),Object(c.b)("li",{parentName:"ul"},"A ",Object(c.b)("strong",{parentName:"li"},Object(c.b)("em",{parentName:"strong"},"Value")),", a term of type ",Object(c.b)("inlineCode",{parentName:"li"},"ValueType"))),Object(c.b)("p",null,'(we use "term" here to avoid confusion with the use of "value" in a predicate).'),Object(c.b)("p",null,"Often the value is empty, represented by the empty record ",Object(c.b)("inlineCode",{parentName:"p"},"{}"),". Most\npredicates have all their information in the key."),Object(c.b)("p",null,"You can think of Glean as like a key/value store: we can look up a key\n",Object(c.b)("inlineCode",{parentName:"p"},"K")," in predicate ",Object(c.b)("inlineCode",{parentName:"p"},"P")," and get back value ",Object(c.b)("inlineCode",{parentName:"p"},"V.")," We can also query for\n",Object(c.b)("em",{parentName:"p"},"patterns")," that match multiple keys, and get back all the facts that\nmatch the pattern. More about this when we talk about ",Object(c.b)("a",{parentName:"p",href:"/docs/angle/intro"},"Angle"),"\nqueries."))}u.isMDXComponent=!0},128:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),b=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=b(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=b(n),m=a,d=s["".concat(i,".").concat(m)]||s[m]||u[m]||c;return n?r.a.createElement(d,o(o({ref:t},p),{},{components:n})):r.a.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,i=new Array(c);i[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var p=2;p<c;p++)i[p]=n[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);