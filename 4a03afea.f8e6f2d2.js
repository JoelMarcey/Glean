(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{128:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var l=n(0),a=n.n(l);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},i=Object.keys(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),s=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):b(b({},t),e)),n},p=function(e){var t=s(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,r=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=s(n),d=l,m=p["".concat(r,".").concat(d)]||p[d]||u[d]||i;return n?a.a.createElement(m,b(b({ref:t},c),{},{components:n})):a.a.createElement(m,b({ref:t},c))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=d;var b={};for(var o in t)hasOwnProperty.call(t,o)&&(b[o]=t[o]);b.originalType=e,b.mdxType="string"==typeof e?e:l,r[1]=b;for(var c=2;c<i;c++)r[c]=n[c];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},91:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return m}));var l=n(3),a=n(7),i=(n(0),n(128)),r=["components"],b={id:"shell",title:"Using the Shell",sidebar_label:"Using the Shell"},o={unversionedId:"shell",id:"shell",isDocsHomePage:!1,title:"Using the Shell",description:"The shell is an interactive tool in which you can",source:"@site/../docs/shell.md",slug:"/shell",permalink:"/docs/shell",editUrl:"https://www.internalfb.com/intern/diffusion/FBS/browse/master/fbcode/glean/website/../docs/shell.md",version:"current",sidebar_label:"Using the Shell",sidebar:"someSidebar",previous:{title:"Running the Tools",permalink:"/docs/running"},next:{title:"Running the Glean Server",permalink:"/docs/server"}},c=[{value:"Invoking the shell",id:"invoking-the-shell",children:[]},{value:"Quick start",id:"quick-start",children:[]},{value:"Shell options",id:"shell-options",children:[]}],s=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(i.b)("div",t)}},p=s("FbInternalOnly"),u=s("OssOnly"),d={toc:c};function m(e){var t=e.components,n=Object(a.a)(e,r);return Object(i.b)("wrapper",Object(l.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The shell is an interactive tool in which you can"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Experiment with ",Object(i.b)("a",{parentName:"li",href:"/docs/angle/guide"},"Angle queries")),Object(i.b)("li",{parentName:"ul"},"Explore the data in a Glean database"),Object(i.b)("li",{parentName:"ul"},"Experiment with schema changes and ",Object(i.b)("a",{parentName:"li",href:"/docs/derived"},"derived predicates")),Object(i.b)("li",{parentName:"ul"},"Create experimental databases and query them")),Object(i.b)("h2",{id:"invoking-the-shell"},"Invoking the shell"),Object(i.b)(p,{mdxType:"FbInternalOnly"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"glean-shell\n")),Object(i.b)("p",null,"will start the shell, connect to the Glean query service and load up\nthe ",Object(i.b)("inlineCode",{parentName:"p"},"fbsource")," database.")),Object(i.b)(u,{mdxType:"OssOnly"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"glean-shell --service HOST:PORT\n")),Object(i.b)("p",null,"to connect to a server, or"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"glean-shell --db-root DIR\n")),Object(i.b)("p",null,"to use local databases from directory ",Object(i.b)("inlineCode",{parentName:"p"},"DIR"),".")),Object(i.b)("p",null,"See ",Object(i.b)("a",{parentName:"p",href:"#shell-options"},"shell options")," for more command-line options."),Object(i.b)("h2",{id:"quick-start"},"Quick start"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"List the available databases with ",Object(i.b)("inlineCode",{parentName:"li"},":list")),Object(i.b)("li",{parentName:"ul"},"Select a database with ",Object(i.b)("inlineCode",{parentName:"li"},":db NAME")),Object(i.b)("li",{parentName:"ul"},"See the contents of the database with ",Object(i.b)("inlineCode",{parentName:"li"},":stat")),Object(i.b)("li",{parentName:"ul"},"Type queries in ",Object(i.b)("a",{parentName:"li",href:"/docs/angle/guide"},"Angle")," to see the results.")),Object(i.b)("h2",{id:"shell-options"},"Shell options"),Object(i.b)("p",null,"The shell accepts all the ",Object(i.b)("a",{parentName:"p",href:"running#common-options"},"common options"),". Additionally:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"QUERY")," or ",Object(i.b)("inlineCode",{parentName:"li"},":COMMAND"),Object(i.b)("br",null),"\nPerform the given ",Object(i.b)("inlineCode",{parentName:"li"},"QUERY")," or ",Object(i.b)("inlineCode",{parentName:"li"},":COMMAND")," and then exit. If multiple\ncommands or queries are given on the command line, they will be\nperformed in left-to-right order."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"--db NAME")," or ",Object(i.b)("inlineCode",{parentName:"li"},"--db NAME/HASH"),Object(i.b)("br",null),"\nLoad the database ",Object(i.b)("inlineCode",{parentName:"li"},"NAME")," or ",Object(i.b)("inlineCode",{parentName:"li"},"NAME/HASH"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"--limit N"),Object(i.b)("br",null),"\nSet the default limit for queries; equivalent to the ",Object(i.b)("inlineCode",{parentName:"li"},":limit")," command."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"--width N"),Object(i.b)("br",null),"\nSet the terminal width for pretty-printing results."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"--pager"),Object(i.b)("br",null),"\nEnable automatic paging of results longer than a page."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"-v|--verbose N"),Object(i.b)("br",null),"\nEnabled verbosity at level ",Object(i.b)("inlineCode",{parentName:"li"},"N"))),Object(i.b)("h1",{id:"commands"},"Commands"),Object(i.b)("p",null,"Note that you can abbreviate commands as long as the abbreviation is\nunique. For example, ",Object(i.b)("inlineCode",{parentName:"p"},":edit")," can be abbreviated as ",Object(i.b)("inlineCode",{parentName:"p"},":e"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":database NAME")," or ",Object(i.b)("inlineCode",{parentName:"li"},":database NAME/HASH"),Object(i.b)("br",null),"\nUse database ",Object(i.b)("inlineCode",{parentName:"li"},"NAME")," or ",Object(i.b)("inlineCode",{parentName:"li"},"NAME/HASH"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"list NAME"),Object(i.b)("br",null),"\nList available databases which match ",Object(i.b)("inlineCode",{parentName:"li"},"NAME"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"list-all NAME"),Object(i.b)("br",null),"\nList available databases, and restorable backups, which match ",Object(i.b)("inlineCode",{parentName:"li"},"NAME"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":index LANGUAGE DIR"),Object(i.b)("br",null),"\nIndex some source code for ",Object(i.b)("inlineCode",{parentName:"li"},"LANGUAGE")," in directory ",Object(i.b)("inlineCode",{parentName:"li"},"DIR"),", creating a\nnew database. This command is only available with the ",Object(i.b)("inlineCode",{parentName:"li"},"--db-root"),"\noption. Currently the only supported language is ",Object(i.b)("inlineCode",{parentName:"li"},"flow"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":debug off|[-]ir|[-]bytecode|all"),Object(i.b)("br",null),"\nEnable query debugging; ",Object(i.b)("inlineCode",{parentName:"li"},":debug ir")," shows the intermediate\nrepresentation of the query after optimisation; ",Object(i.b)("inlineCode",{parentName:"li"},":debug\nbytecode")," shows the compiled bytecode."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":describe NAME"),Object(i.b)("br",null),"\nLike ",Object(i.b)("inlineCode",{parentName:"li"},":list"),", but show more details"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":describe-all NAME"),Object(i.b)("br",null),"\nLike ",Object(i.b)("inlineCode",{parentName:"li"},":list-all"),", but show more details"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":schema [PREDICATE|TYPE]"),Object(i.b)("br",null),"\nShow schema for the given ",Object(i.b)("inlineCode",{parentName:"li"},"PREDICATE")," or ",Object(i.b)("inlineCode",{parentName:"li"},"TYPE"),", or the whole schema\nif no predicate or type is given."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":edit"),Object(i.b)("br",null),"\nEdit a query in an external editor. Set the ",Object(i.b)("inlineCode",{parentName:"li"},"EDITOR")," environment\nvariable to choose an editor."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":limit N"),Object(i.b)("br",null),"\nSet limit on the number of query results. If there are more results\nthan the limit, then you can type ",Object(i.b)("inlineCode",{parentName:"li"},":more")," to fetch the next ",Object(i.b)("inlineCode",{parentName:"li"},"N"),"\nresults."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":timeout off|MILLISECONDS"),Object(i.b)("br",null),"\nSet the query time budget. If the time limit expires, the results so\nfar are returned, and you can type ",Object(i.b)("inlineCode",{parentName:"li"},":more")," to see more results."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":count QUERY"),Object(i.b)("br",null),"\nShow only a count of query results, not the results themselves"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":more"),Object(i.b)("br",null),"\nFetch more results from the previous query"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":profile [off|summary|full]"),Object(i.b)("br",null),"\nShow query profiling information; see ",Object(i.b)("a",{parentName:"li",href:"/docs/angle/debugging"},"Query Debugging"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":reload"),Object(i.b)("br",null),"\nReload the schema (when using ",Object(i.b)("inlineCode",{parentName:"li"},"--schema"),"). This command is useful when\nmaking changes to the schema, including ",Object(i.b)("a",{parentName:"li",href:"derived"},"derived\npredicates"),". Edit the schema source files, ",Object(i.b)("inlineCode",{parentName:"li"},":reload")," and then\ntest your changes."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":statistics [PREDICATE]"),Object(i.b)("br",null),"\nShow statistics for the current database."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":quit"),Object(i.b)("br",null),"\nLeave the shell.")))}m.isMDXComponent=!0}}]);