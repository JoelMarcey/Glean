(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{128:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),l=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),d=r,m=p["".concat(o,".").concat(d)]||p[d]||b[d]||c;return n?a.a.createElement(m,i(i({ref:t},u),{},{components:n})):a.a.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var u=2;u<c;u++)o[u]=n[u];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},94:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return u})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),c=(n(0),n(128)),o=(n(39),["components"]),i={id:"recursion",title:"Recursion",sidebar_label:"Recursion"},s={unversionedId:"schema/recursion",id:"schema/recursion",isDocsHomePage:!1,title:"Recursion",description:"Predicates can be (mutually) recursive. In other words, **we can use",source:"@site/../docs/schema/recursion.md",slug:"/schema/recursion",permalink:"/docs/schema/recursion",version:"current",sidebar_label:"Recursion",sidebar:"someSidebar",previous:{title:"Syntax",permalink:"/docs/schema/syntax"},next:{title:"How do I change a schema?",permalink:"/docs/schema/changing"}},u=[],l={toc:u};function p(e){var t=e.components,n=Object(a.a)(e,o);return Object(c.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Predicates can be (mutually) recursive. In other words, ",Object(c.b)("strong",{parentName:"p"},"we can use\npredicates to define recursive types"),". You can define linked lists,\ntrees and DAGs using predicates. However, the ",Object(c.b)("strong",{parentName:"p"},"facts cannot form a\ncycle"),": we cannot have a circular list, or a cyclic graph in the\ndata."),Object(c.b)("p",null,"The restriction on cyclic data is enforced when facts are added to a\ndatabase: each new fact added to the database can only refer to\nearlier facts via its key. This is because facts are added to the\ndatabase in batches, removing duplicates and substituting references\nto duplicated facts at the same time. Allowing recursion between the\nkeys would make this process significantly harder."),Object(c.b)("p",null,"Facts can be recursive in their ",Object(c.b)("em",{parentName:"p"},"values"),", but not their ",Object(c.b)("em",{parentName:"p"},"keys"),". A\nmutually recursive set of facts must be added to the database in a\nsingle batch, however."),Object(c.b)("p",null,"To summarise, recursion is"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"allowed between ",Object(c.b)("em",{parentName:"li"},"predicates")),Object(c.b)("li",{parentName:"ul"},"not allowed between ",Object(c.b)("em",{parentName:"li"},"keys")),Object(c.b)("li",{parentName:"ul"},"allowed between ",Object(c.b)("em",{parentName:"li"},"values"))))}p.isMDXComponent=!0}}]);