schema java.2 {
import src.1

# A name (identifier)
predicate Name : string

# A Java type
predicate Type :
  {
    type : Name
  }

##
# https://docs.oracle.com/javase/8/docs/api/javax/lang/model/element/Modifier.html
type Modifier =
  enum {
    abstract_ |
    default_ |
    final_ |
    native_ |
    private_ |
    protected_ |
    public_ |
    static_ |
    strictfp_ |
    synchronized_ |
    transient_ |
    volatile_ |
  }

# A variable declaration
predicate VariableDeclaration :
  {
    type : Type,
    name : Name,
    modifiers : [Modifier],
    loc : src.Loc,
  }

# A class constructor declaration
predicate ConstructorDeclaration :
  {
    parameters : [VariableDeclaration],
    modifiers : [Modifier],
    loc : src.Loc,
  }

# A class method declaration
predicate MethodDeclaration :
  {
    name : Name,
    parameters : [VariableDeclaration],
    returnType : Type,
    modifiers : [Modifier],
    loc : src.Loc
  }

# An interface declaration
predicate InterfaceDeclaration :
  {
    name : Name,
    modifiers : [Modifier],
    extends_ : [Type],
    methods : [MethodDeclaration],
    loc : src.Loc,
  }

# A class declaration
predicate ClassDeclaration :
  {
    name : Name,
    modifiers : [Modifier],
    extends_ : maybe Type,
    implements_ : [Type],
    variables : [VariableDeclaration],
    constructors : [ConstructorDeclaration],
    methods : [MethodDeclaration],
    loc : src.Loc
  }
}

schema java.3 : java.2 {
import src.1

# changes from v2:
# QNames
# Generic type support
# XRefs

predicate QName :
  {
    name: string,
    fqn: maybe string,
    signature: maybe string,
  }

# A Java type
predicate Type :
  {
    type : string,
    typeArgs: [TypeArg],
  }

predicate TypeArg :
  {
    type: Type |
    wildcard: Wildcard |
  }

# https://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.5.1
type Wildcard =
  {
    extends_: Type |
    super_: Type |
    unbounded: bool |
  }

predicate TypeParam :
  {
    name: string,
    extends_: [Type],
  }

# A variable declaration
predicate VariableDeclaration :
  {
    name: QName,
    type : Type,
    modifiers : [Modifier],
    loc : src.Loc,
  }

# A constructor declaration
predicate ConstructorDeclaration :
  {
    name: QName,
    parameters : [VariableDeclaration],
    modifiers : [Modifier],
    typeParams: [TypeParam],
    loc : src.Loc,
  }

# A method declaration
predicate MethodDeclaration :
  {
    name : QName,
    parameters : [VariableDeclaration],
    returnType : Type,
    modifiers : [Modifier],
    typeParams: [TypeParam],
    loc : src.Loc,
  }

# An interface declaration
predicate InterfaceDeclaration :
  {
    name: QName,
    modifiers : [Modifier],
    extends_ : [Type],
    methods : [MethodDeclaration],
    typeParams: [TypeParam],
    loc : src.Loc,
  }

# A class declaration
predicate ClassDeclaration :
  {
    name : QName,
    modifiers : [Modifier],
    extends_ : maybe Type,
    implements_ : [Type],
    variables : [VariableDeclaration],
    constructors : [ConstructorDeclaration],
    methods : [MethodDeclaration],
    typeParams: [TypeParam],
    loc : src.Loc,
  }

# Derived predicate to speed up querying for subclasses of a base class
predicate Inheritance :
  {
    base: Type,
    subclass: ClassDeclaration,
  }
  stored { Base, Subclass } where
    Subclass = ClassDeclaration { extends_ = { just = Base } }

# Code that is referenced elsewhere
type XRefTarget =
  {
    class_or_interface_: QName |
    ctor_: QName |
    method_: QName |
  }

# References to target code
predicate XRef :
  {
    target: XRefTarget,
    ranges: [src.ByteSpan],
  }

# Cross-references to a target within a file
predicate FileXRefs :
  {
    file : src.File,
    xrefs : [XRef],
  }

}

schema java.4 : java.3 {
import src.1
# New in version: declaration annotations

predicate Annotation :
  {
    name : QName,
  }

# A variable declaration
predicate VariableDeclaration :
  {
    name: QName,
    type : Type,
    annotations : [Annotation],
    modifiers : [Modifier],
    loc : src.Loc,
  }

# A constructor declaration
predicate ConstructorDeclaration :
  {
    name: QName,
    parameters : [VariableDeclaration],
    annotations : [Annotation],
    modifiers : [Modifier],
    typeParams: [TypeParam],
    loc : src.Loc,
  }

# A method declaration
predicate MethodDeclaration :
  {
    name : QName,
    parameters : [VariableDeclaration],
    returnType : Type,
    annotations : [Annotation],
    modifiers : [Modifier],
    typeParams: [TypeParam],
    loc : src.Loc,
  }

# An interface declaration
predicate InterfaceDeclaration :
  {
    name: QName,
    annotations : [Annotation],
    modifiers : [Modifier],
    extends_ : [Type],
    methods : [MethodDeclaration],
    typeParams: [TypeParam],
    loc : src.Loc,
  }

# A class declaration
predicate ClassDeclaration :
  {
    name : QName,
    modifiers : [Modifier],
    extends_ : maybe Type,
    implements_ : [Type],
    annotations : [Annotation],
    variables : [VariableDeclaration],
    constructors : [ConstructorDeclaration],
    methods : [MethodDeclaration],
    typeParams: [TypeParam],
    loc : src.Loc,
  }

predicate AnnotatedClass :
  {
    annotation : Annotation,
    class_ : ClassDeclaration,
  } stored { Annotation, Class_ } where
      Class_ = ClassDeclaration { annotations = As };
      Annotation = As[..]

# New version of Inheritance to work with new ClassDeclaration
predicate Inheritance :
  {
    base: Type,
    subclass: ClassDeclaration,
  }
  stored { Base, Subclass } where
    Subclass = ClassDeclaration { extends_ = { just = Base } }

predicate XRefFile :
{
  xref: XRef,
  file: src.File,
}
  { Xref, File } where
    { target = T } = Xref;
    (
      { class_or_interface_ = N } = T;
      (
        java.ClassDeclaration.4 { name = N, loc = { file = File } }
      ) | (
        java.InterfaceDeclaration.4 { name = N, loc = { file = File } }
      )
    ) | (
     { method_ = N } = T;
     java.MethodDeclaration.4 { name = N, loc = { file = File } }
   ) | (
     { ctor_ = N } = T;
     java.ConstructorDeclaration.4 { name = N, loc = { file = File } }
   )

}
