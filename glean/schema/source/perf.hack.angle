schema perf.hack.1 {
import hack.4
import src.1

# A bare method or function name, without container or namespace
type FunctionName = string

# A "full name", of the form "Class::method"
type FullName = string

# Float value multiplied by 1 million
type ScaledMillion = nat

type FileLine = {
    file : src.File,  # eg."www/flib/qp/filters/server_filter/HashtagDeepDivePageNumDynamicFilter.php"
    line : nat,       # eg. 10
  }

# Function data
# Xenon function stats initialization - https://fburl.com/diffusion/jv3pk1i8
predicate FunctionData :
  {
    function_name : FunctionName,   # eg. "genGetAssociatedIdsForAd"
    full_name : FullName,       # eg. "AdListOpsMatcherBase::genMatcherDataToCacheImpl"
    function_definition : FileLine,
    calls_per_request : ScaledMillion,    # eg. 10400000
    inclusive_gcpu : ScaledMillion,       # eg. 5700
    exclusive_gcpu : ScaledMillion,       # eg. 1800
    total_samples : nat,            # 91406400000
    callers : [FunctionCallers],    # Top 3 - https://fburl.com/diffusion/emjj3h4y
    products : [FunctionProducts],  # Top 3 - https://fburl.com/diffusion/r51gsa5v
  }

# Base query - https://fburl.com/diffusion/exc2nq9b
type FunctionCallers =
  {
    caller_name : string,     # eg. "AdListOpsMatcherBase::genMatcherDataToCacheImpl"
    caller_location : FileLine,            # $caller['file'], $caller['line']
    caller_call_percent : ScaledMillion,     # $data['callers']['count'] https://fburl.com/diffusion/wrp5fxza
  }

# Example:  Products: ads:app_signals (29.7%)m_android (20.3%)ads:ads_signals (12.3%)
# Base query - https://fburl.com/diffusion/e9j9geet
type FunctionProducts =
  {
    product_name : string,  # $data['products']['product']
    product_call_percent : ScaledMillion,  # $data['products']['count']  https://fburl.com/diffusion/z2rlovnv
  }

# The data below is lower priority.
# Rendered in file lines.
# Query: https://fburl.com/diffusion/jee2ey2g
# https://fburl.com/diffusion/fjcbbwk6
predicate ReturnPercentages :
  {
    location : FileLine,               # ToDo Key to function FunctionDefinition
    full_name : string, # $entry->getFieldAsString('function_name')
    total_sample_count : nat,     # sum(function_to_count[fn[rows]] - https://fburl.com/diffusion/5ncw3wco
    return_counts : [ReturnCount],  # Iteration - https://fburl.com/diffusion/yehtdatq
  }

# Query: https://fburl.com/diffusion/luluf917
type ReturnCount =
  {
    lineNum : nat,            # $entry->getFieldAsInt('line_number')  https://fburl.com/diffusion/1hs0dfoi
    exit_sample_count : nat,  # $entry->getFieldAsInt('exit_count')
  }

# https://fburl.com/code/0121g1m7
predicate LoopCounts :
  {
    location: FileLine,         # XX , $row['line_number'] <- XX = $row['filename']?
    loop_counts : [LoopCount],  # https://fburl.com/diffusion/8a2hcxlf
  }

# Query: https://fburl.com/code/l1wk96cl
# Percentage is num_iterations / count https://fburl.com/diffusion/dvm95koc
type LoopCount =
  {
    num_iterations: nat,    # $row['num_iterations']
    count : nat,            #  $row['count']
  }
}
